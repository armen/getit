#!/bin/sh
# vim: set expandtab tabstop=4 shiftwidth=4 foldmethod=marker:
#
# Getit, simplified, yet powerful download manager
#
#   Author: Armen Baghumian <armen@OpenSourceClub.org>
#   License: There is no license, then you are free to do WHAT EVER YOU WANT with
#            this script
#

. getit-core

log "started getitd..." $LOG_DEBUG

# Do the cleanup when one of SIGHUP, SIGINT, SIGTERM signals is received
trap terminate SIGHUP SIGINT SIGTERM

create_download_directory

# its first time, get the fingerprint
fingerprint=`get_fingerprint`

while (true);
do

    # save fingerprint
    fingerprint=`get_fingerprint`

    # 2 indicates timeout
    if [ "$inotify_ret" != "2" ]
    then
        if [ "$old_fingerprint" != "$fingerprint" ]
        then
            # finger print has been changed, do the work
            if [ ! -z $old_fingerprint ]
            then
                log "finger print changed from '${old_fingerprint}' to '${fingerprint}'" $LOG_DEBUG
            fi
            clean_up
            start_download
        fi
    else
        # run cleanup-queue in background and quickly watch queue file again
        log "run cleanup-queue in background and quickly watch queue file again" $LOG_DEBUG
        getitctl cleanup-queue &
    fi

    log "watching the queue for any change" $LOG_DEBUG

    # watch queue file
    inotifywait --quiet --timeout=30 --event MOVE_SELF --event MODIFY $QUEUE 1>/dev/null &
    inotify_pid=$!      # catch its pid so we can cleanup it later when a SIGNAL received

    log "go to sleep and wait for inotifywait" $LOG_DEBUG
   
    wait $inotify_pid   # wait for it
    inotify_ret=$?      # an then catch the return value, 2 indicates timeout

    if [ "$inotify_ret" == "2" ]
    then
        log "inotifywait has been quit because of timeout" $LOG_DEBUG
    else
        log "there is a change in queue file get new fingerprint of the queue" $LOG_DEBUG
    fi

    # to get new fingerprint we have to sleep for 1 second so file will be available for reading
    sleep 1
    old_fingerprint=$fingerprint
done
